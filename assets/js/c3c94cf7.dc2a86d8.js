"use strict";(self.webpackChunkjvtc_yue_zone=self.webpackChunkjvtc_yue_zone||[]).push([[8882],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>y});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=r.createContext({}),u=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(p.Provider,{value:t},e.children)},l="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),l=u(n),g=i,y=l["".concat(p,".").concat(g)]||l[g]||m[g]||a;return n?r.createElement(y,o(o({ref:t},c),{},{components:n})):r.createElement(y,o({ref:t},c))}));function y(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=g;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[l]="string"==typeof e?e:i,o[1]=s;for(var u=2;u<a;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},22858:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>m,frontMatter:()=>a,metadata:()=>s,toc:()=>u});var r=n(87462),i=(n(67294),n(3905));const a={},o="JOSE",s={unversionedId:"\u5f00\u53d1/\u6846\u67b6/Spring/Security/OAthu2/JOSE",id:"\u5f00\u53d1/\u6846\u67b6/Spring/Security/OAthu2/JOSE",title:"JOSE",description:"spring-security-oauth2-jose.jar \u5305\u4e2d\u5305\u542b Spring Security \u5bf9 JOSE\uff08Javascript Object Signing and Encryption\uff09\u6846\u67b6\u7684\u652f\u6301\u3002",source:"@site/docs/02-\u5f00\u53d1/03-\u6846\u67b6/Spring/06-Security/OAthu2/JOSE.md",sourceDirName:"02-\u5f00\u53d1/03-\u6846\u67b6/Spring/06-Security/OAthu2",slug:"/\u5f00\u53d1/\u6846\u67b6/Spring/Security/OAthu2/JOSE",permalink:"/docs/\u5f00\u53d1/\u6846\u67b6/Spring/Security/OAthu2/JOSE",draft:!1,editUrl:"https://github.com/Yue-plus/JVTC.Yue.Zone/tree/main/docs/02-\u5f00\u53d1/03-\u6846\u67b6/Spring/06-Security/OAthu2/JOSE.md",tags:[],version:"current",frontMatter:{},sidebar:"\u5f00\u53d1",previous:{title:"OAthu2",permalink:"/docs/\u5f00\u53d1/\u6846\u67b6/Spring/Security/OAthu2/"},next:{title:"\u6388\u6743",permalink:"/docs/\u5f00\u53d1/\u6846\u67b6/Spring/Security/\u6388\u6743"}},p={},u=[{value:"\u6559\u7a0b",id:"\u6559\u7a0b",level:2},{value:"<code>JwtClaimsSet</code>",id:"jwtclaimsset",level:2},{value:"JWT Login Sample",id:"jwt-login-sample",level:2},{value:"\u751f\u6210 RSA \u5bc6\u94a5\u5bf9",id:"\u751f\u6210-rsa-\u5bc6\u94a5\u5bf9",level:3},{value:"\u7f16\u8f91\u914d\u7f6e\u6587\u4ef6",id:"\u7f16\u8f91\u914d\u7f6e\u6587\u4ef6",level:3},{value:"\u7f16\u5199\u914d\u7f6e\u7c7b",id:"\u7f16\u5199\u914d\u7f6e\u7c7b",level:3},{value:"\u7f16\u5199\u63a7\u5236\u5668",id:"\u7f16\u5199\u63a7\u5236\u5668",level:3},{value:"\u83b7\u53d6\u4ee4\u724c",id:"\u83b7\u53d6\u4ee4\u724c",level:3},{value:"\u4f7f\u7528\u4ee4\u724c",id:"\u4f7f\u7528\u4ee4\u724c",level:3}],c={toc:u},l="wrapper";function m(e){let{components:t,...n}=e;return(0,i.kt)(l,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"jose"},"JOSE"),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},(0,i.kt)("inlineCode",{parentName:"p"},"spring-security-oauth2-jose.jar")," \u5305\u4e2d\u5305\u542b Spring Security \u5bf9 JOSE\uff08Javascript Object Signing and Encryption\uff09\u6846\u67b6\u7684\u652f\u6301\u3002\nJOSE \u6846\u67b6\u65e8\u5728\u63d0\u4f9b\u4e00\u79cd\u65b9\u6cd5\uff0c\u5728\u5404\u65b9\u4e4b\u95f4\u5b89\u5168\u5730\u8f6c\u79fb claim\u3002\n\u5b83\u662f\u7531\u4e00\u7cfb\u5217\u89c4\u8303\u6784\u5efa\u7684\u3002"),(0,i.kt)("ul",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"JWT"),": JSON Web Token",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://jwt.io/"},(0,i.kt)("img",{src:"http://jwt.io/img/logo-asset.svg",alt:"JWT",style:{height:"48px",borderRadius:"24px"}}))))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"JWS"),": JSON Web Signature"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"JWE"),": JSON Web Encryption"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"JWK"),": JSON Web Key")),(0,i.kt)("p",{parentName:"admonition"},"\u5b83\u5305\u542b\u4ee5\u4e0b\u9876\u7ea7\u5305\u3002"),(0,i.kt)("ul",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"org.springframework.security.oauth2.jwt")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"org.springframework.security.oauth2.jose")))),(0,i.kt)("h2",{id:"\u6559\u7a0b"},"\u6559\u7a0b"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://springdoc.cn/spring-security/servlet/oauth2/resource-server/jwt.html"},"OAuth 2.0 \u8d44\u6e90\u670d\u52a1\u5668 JWT :: Spring Security Reference")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.baeldung.com/spring-security-oauth2-jws-jwk"},"JWS + JWK in a Spring Security OAuth2 Application | Baeldung")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.jianshu.com/p/d1644e281250"},"JWT\u5168\u9762\u89e3\u8bfb\u3001\u8be6\u7ec6\u4f7f\u7528\u6b65\u9aa4 - \u7b80\u4e66"))),(0,i.kt)("h2",{id:"jwtclaimsset"},(0,i.kt)("inlineCode",{parentName:"h2"},"JwtClaimsSet")),(0,i.kt)("h2",{id:"jwt-login-sample"},"JWT Login Sample"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/spring-projects/spring-security-samples/tree/main/servlet/spring-boot/java/jwt/login"},"JWT Login Sample"),"\n\u8fd9\u4e2a\u5b98\u65b9\u793a\u4f8b\u6f14\u793a\u4e86\u5982\u4f55\u5728\u4e0d\u4f7f\u7528\u5355\u72ec\u7684\u6388\u6743\u670d\u52a1\u5668\u7684\u60c5\u51b5\u4e0b\u63a5\u53d7 JWT\u3002"),(0,i.kt)("p",null,"\u5f53\u7528\u6237\u5e0c\u671b\u4f7f\u7528\u7528\u6237\u540d\u548c\u5bc6\u7801\u8fdb\u884c\u672c\u5730\u8eab\u4efd\u9a8c\u8bc1\uff0c\u7136\u540e\u4f7f\u7528 JWT \u65f6\uff0c\u6b64\u65b9\u6cd5\u5728 REST API \u4e2d\u975e\u5e38\u6709\u7528\u3002"),(0,i.kt)("h3",{id:"\u751f\u6210-rsa-\u5bc6\u94a5\u5bf9"},"\u751f\u6210 RSA \u5bc6\u94a5\u5bf9"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"cd src/main/resources/application\n\n# \u5728\u5f53\u524d\u76ee\u5f55\u4e0b\u751f\u6210 PKCS#8 \u683c\u5f0f\u7684\u79c1\u94a5\nopenssl genpkey -out app.key -algorithm RSA -pkeyopt rsa_keygen_bits:2048\n\n# \u4f7f\u7528\u79c1\u94a5\u751f\u6210\u516c\u94a5\nopenssl rsa -in app.key -pubout -out app.pub\n")),(0,i.kt)("h3",{id:"\u7f16\u8f91\u914d\u7f6e\u6587\u4ef6"},"\u7f16\u8f91\u914d\u7f6e\u6587\u4ef6"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="src/main/resources/application.yaml"',title:'"src/main/resources/application.yaml"'},"jwt:\n  private-key: classpath:app.key\n  public-key: classpath:app.pub\n")),(0,i.kt)("h3",{id:"\u7f16\u5199\u914d\u7f6e\u7c7b"},"\u7f16\u5199\u914d\u7f6e\u7c7b"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},'package zone.yue.core\n\nimport com.nimbusds.jose.jwk.JWK\nimport com.nimbusds.jose.jwk.JWKSet\nimport com.nimbusds.jose.jwk.RSAKey\nimport com.nimbusds.jose.jwk.source.ImmutableJWKSet\nimport com.nimbusds.jose.jwk.source.JWKSource\nimport com.nimbusds.jose.proc.SecurityContext\nimport org.springframework.beans.factory.annotation.Value\nimport org.springframework.context.annotation.Bean\nimport org.springframework.context.annotation.Configuration\nimport org.springframework.security.config.Customizer\nimport org.springframework.security.config.annotation.web.builders.HttpSecurity\nimport org.springframework.security.config.annotation.web.configuration.EnableWebSecurity\nimport org.springframework.security.config.annotation.web.invoke\nimport org.springframework.security.config.http.SessionCreationPolicy\nimport org.springframework.security.oauth2.jwt.JwtDecoder\nimport org.springframework.security.oauth2.jwt.JwtEncoder\nimport org.springframework.security.oauth2.jwt.NimbusJwtDecoder\nimport org.springframework.security.oauth2.jwt.NimbusJwtEncoder\nimport org.springframework.security.oauth2.server.resource.web.BearerTokenAuthenticationEntryPoint\nimport org.springframework.security.oauth2.server.resource.web.access.BearerTokenAccessDeniedHandler\nimport org.springframework.security.web.SecurityFilterChain\nimport java.security.interfaces.RSAPrivateKey\nimport java.security.interfaces.RSAPublicKey\n\n\n@Configuration\n@EnableWebSecurity\nclass SecurityConfiguration {\n    @Value("\\${jwt.private-key}")\n    var key: RSAPrivateKey? = null\n\n    @Value("\\${jwt.public-key}")\n    var pub: RSAPublicKey? = null\n\n    @Bean\n    fun jwtDecoder(): JwtDecoder = NimbusJwtDecoder.withPublicKey(pub).build()\n\n    @Bean\n    fun jwtEncoder(): JwtEncoder {\n        val jwk: JWK = RSAKey.Builder(pub).privateKey(key).build()\n        val jwkSet: JWKSource<SecurityContext> = ImmutableJWKSet(JWKSet(jwk))\n        return NimbusJwtEncoder(jwkSet)\n    }\n\n    // TODO: \u5b9e\u73b0\u4e00\u4e2a UserDetailsService\n\n    @Bean\n    fun filterChain(http: HttpSecurity, encoder: JwtEncoder): SecurityFilterChain {\n        http {\n            csrf { disable() }\n\n            authorizeRequests {\n                authorize("/api/signup", permitAll)\n                authorize("/api/login", permitAll)\n                authorize(anyRequest, authenticated)\n            }\n\n            httpBasic {  }\n\n            oauth2ResourceServer {\n                jwt {  }\n            }\n\n            sessionManagement {\n                sessionCreationPolicy = SessionCreationPolicy.STATELESS\n            }\n\n            exceptionHandling {\n                authenticationEntryPoint = BearerTokenAuthenticationEntryPoint()\n                accessDeniedHandler = BearerTokenAccessDeniedHandler()\n            }\n        }\n\n        return http.build()\n    }\n}\n')),(0,i.kt)("h3",{id:"\u7f16\u5199\u63a7\u5236\u5668"},"\u7f16\u5199\u63a7\u5236\u5668"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},'package zone.yue.core\n\nimport org.springframework.security.core.Authentication\nimport org.springframework.security.core.GrantedAuthority\nimport org.springframework.security.oauth2.jwt.JwtClaimsSet\nimport org.springframework.security.oauth2.jwt.JwtEncoder\nimport org.springframework.security.oauth2.jwt.JwtEncoderParameters\nimport org.springframework.web.bind.annotation.*\nimport java.time.Instant\nimport java.util.stream.Collectors\n\n\n@RestController\n@RequestMapping("/api")\n@CrossOrigin\nclass AccountRestController(val accountService: AccountService, val jwtEncoder: JwtEncoder) {\n    @GetMapping("/hi")\n    fun hi(authentication: Authentication): String = "Hello! ${authentication.name} !"\n\n    @PostMapping("/token")\n    fun token(authentication: Authentication): String {\n        val now = Instant.now()\n        val scope = authentication.authorities.stream()\n            .map { obj: GrantedAuthority -> obj.authority }\n            .collect(Collectors.joining(" "))\n        val claims = JwtClaimsSet.builder()\n            .issuer("self")\n            .issuedAt(now)\n            // .expiresAt(now.plusSeconds(36000L))    // 10 \u5c0f\u65f6\u540e\u8fc7\u671f\n            .expiresAt(now.plus(90, ChronoUnit.DAYS)) // 90 \u5929\u540e\u8fc7\u671f\n            .subject(authentication.name)\n            .claim("scope", scope)\n            .build()\n\n        return jwtEncoder.encode(JwtEncoderParameters.from(claims)).tokenValue\n    }\n}\n')),(0,i.kt)("h3",{id:"\u83b7\u53d6\u4ee4\u724c"},"\u83b7\u53d6\u4ee4\u724c"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"curl -XPOST username:password@localhost:8080/api/token\n")),(0,i.kt)("h3",{id:"\u4f7f\u7528\u4ee4\u724c"},"\u4f7f\u7528\u4ee4\u724c"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-http"},"GET http://localhost:8080/api/info\nAuthorization: Bearer {{token}}\n")))}m.isMDXComponent=!0}}]);
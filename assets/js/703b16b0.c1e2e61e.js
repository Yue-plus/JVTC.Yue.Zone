"use strict";(self.webpackChunkjvtc_yue_zone=self.webpackChunkjvtc_yue_zone||[]).push([[8838],{45745:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>s,metadata:()=>r,toc:()=>l});var t=n(74848),a=n(28453);const s={},i="Chocolatey",r={id:"\u5f00\u53d1/\u5de5\u5177/Chocolatey/README",title:"Chocolatey",description:"Windows \u73b0\u4ee3\u8f6f\u4ef6\u81ea\u52a8\u5316\u7684\u5305\u7ba1\u7406\u5668",source:"@site/docs/02-\u5f00\u53d1/01-\u5de5\u5177/Chocolatey/README.md",sourceDirName:"02-\u5f00\u53d1/01-\u5de5\u5177/Chocolatey",slug:"/\u5f00\u53d1/\u5de5\u5177/Chocolatey/",permalink:"/docs/\u5f00\u53d1/\u5de5\u5177/Chocolatey/",draft:!1,unlisted:!1,editUrl:"https://github.com/Yue-plus/JVTC.Yue.Zone/tree/main/docs/02-\u5f00\u53d1/01-\u5de5\u5177/Chocolatey/README.md",tags:[],version:"current",frontMatter:{},sidebar:"\u5f00\u53d1",previous:{title:"Anaconda",permalink:"/docs/\u5f00\u53d1/\u5de5\u5177/Anaconda/"},next:{title:"Git",permalink:"/docs/\u5f00\u53d1/\u5de5\u5177/Git"}},c={},l=[{value:"\u5b89\u88c5",id:"\u5b89\u88c5",level:2},{value:"\u5b89\u88c5 GUI",id:"\u5b89\u88c5-gui",level:3},{value:"\u4f7f\u7528",id:"\u4f7f\u7528",level:2},{value:"\u5e38\u7528\u6307\u4ee4",id:"\u5e38\u7528\u6307\u4ee4",level:2},{value:"\u5e38\u7528\u8f6f\u4ef6",id:"\u5e38\u7528\u8f6f\u4ef6",level:2},{value:"\u7cfb\u7edf\u73af\u5883",id:"\u7cfb\u7edf\u73af\u5883",level:3},{value:"\u6d4f\u89c8\u5668",id:"\u6d4f\u89c8\u5668",level:3},{value:"\u817e\u8baf",id:"\u817e\u8baf",level:3},{value:"\u5f71\u89c6\u97f3\u4e50",id:"\u5f71\u89c6\u97f3\u4e50",level:3},{value:"Office/WPS",id:"officewps",level:3},{value:"JetBrains",id:"jetbrains",level:3},{value:"IDEA",id:"idea",level:4},{value:"Pycharm",id:"pycharm",level:4},{value:"Android Studio",id:"android-studio",level:4},{value:"\u5f00\u53d1\u73af\u5883",id:"\u5f00\u53d1\u73af\u5883",level:3},{value:"\u5b89\u88c5 Git",id:"\u5b89\u88c5-git",level:4},{value:"\u5b9e\u7528\u5de5\u5177",id:"\u5b9e\u7528\u5de5\u5177",level:3},{value:"\u5b89\u88c5\u4f4d\u7f6e",id:"\u5b89\u88c5\u4f4d\u7f6e",level:2},{value:"Yue_plus \u7684\u7cfb\u7edf\u73af\u5883",id:"yue_plus-\u7684\u7cfb\u7edf\u73af\u5883",level:2}];function h(e){const o={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components},{Details:n}=o;return n||function(e,o){throw new Error("Expected "+(o?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(o.header,{children:(0,t.jsx)(o.h1,{id:"chocolatey",children:"Chocolatey"})}),"\n",(0,t.jsxs)(o.admonition,{type:"info",children:[(0,t.jsx)(o.p,{children:"Windows \u73b0\u4ee3\u8f6f\u4ef6\u81ea\u52a8\u5316\u7684\u5305\u7ba1\u7406\u5668"}),(0,t.jsxs)(o.p,{children:["| ",(0,t.jsx)(o.a,{href:"https://chocolatey.org/",children:"\u5b98\u7f51"}),"\n| ",(0,t.jsx)(o.a,{href:"https://docs.chocolatey.org/en-us/",children:"\u6587\u6863"}),"\n| ",(0,t.jsx)(o.a,{href:"https://community.chocolatey.org/packages",children:"\u67e5\u627e\u5305"}),"\n|"]})]}),"\n",(0,t.jsx)(o.h2,{id:"\u5b89\u88c5",children:"\u5b89\u88c5"}),"\n",(0,t.jsxs)(o.blockquote,{children:["\n",(0,t.jsxs)(o.p,{children:["\u53c2\u8003 ",(0,t.jsx)(o.a,{href:"https://chocolatey.org/install",children:"\u5b98\u7f51\u5b89\u88c5\u6307\u5f15"})," \u3002"]}),"\n"]}),"\n",(0,t.jsx)(o.p,{children:"\u4f7f\u7528\u7ba1\u7406\u5458\u8eab\u4efd\u5728 PowerShell \u4e2d\u8fd0\u884c\uff08\u9002\u7528\u4e8e\u4e2a\u4eba\u684c\u9762\u4f7f\u7528\uff09\uff1a"}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-powershell",children:"Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))\n"})}),"\n",(0,t.jsx)(o.h3,{id:"\u5b89\u88c5-gui",children:"\u5b89\u88c5 GUI"}),"\n",(0,t.jsxs)(o.blockquote,{children:["\n",(0,t.jsxs)(o.p,{children:["\u53c2\u8003 ",(0,t.jsx)(o.a,{href:"https://docs.chocolatey.org/en-us/chocolatey-gui/setup/installation",children:"Chocolatey GUI"})]}),"\n"]}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-shell",children:"choco install chocolateygui -y\n"})}),"\n",(0,t.jsx)(o.h2,{id:"\u4f7f\u7528",children:"\u4f7f\u7528"}),"\n",(0,t.jsxs)(o.p,{children:["\u5b89\u88c5\u5b8c\u6210\u540e\u53ef\u4f7f\u7528 ",(0,t.jsx)(o.code,{children:"choco"})," \u547d\u4ee4\uff1a"]}),"\n",(0,t.jsxs)(n,{children:[(0,t.jsx)("summary",{children:(0,t.jsx)("code",{children:"choco -h"})}),(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-text",children:"PS C:\\Users\\Yue_plus> choco -h\nThis is a listing of all of the different things you can pass to choco.\n\nDEPRECATION NOTICE\n\nThe shims `chocolatey`, `cinst`, `clist`, `cpush`, `cuninst` and `cup` are deprecated.\nWe recommend updating all scripts to use their full command equivalent as these will be\nremoved in v2.0.0 of Chocolatey.\n\nOptions and Switches\n\n -v, --version\n     Version - Prints out the Chocolatey version. Available in 0.9.9+.\n\nCommands\n\n * apikey - retrieves, saves or deletes an apikey for a particular source\n * config - Retrieve and configure config file settings\n * export - exports list of currently installed packages\n * feature - view and configure choco features\n * features - view and configure choco features (alias for feature)\n * find - searches remote or local packages (alias for search)\n * help - displays top level help information for choco\n * info - retrieves package information. Shorthand for choco search pkgname --exact --verbose\n * install - installs packages using configured sources\n * list - lists remote or local packages\n * new - creates template files for creating a new Chocolatey package\n * outdated - retrieves information about packages that are outdated. Similar to upgrade all --noop\n * pack - packages nuspec, scripts, and other Chocolatey package resources into a nupkg file\n * pin - suppress upgrades for a package\n * push - pushes a compiled nupkg to a source\n * search - searches remote or local packages\n * setapikey - retrieves, saves or deletes an apikey for a particular source (alias for apikey)\n * source - view and configure default sources\n * sources - view and configure default sources (alias for source)\n * template - get information about installed templates\n * templates - get information about installed templates (alias for template)\n * uninstall - uninstalls a package\n * unpackself - re-installs Chocolatey base files\n * upgrade - upgrades packages from various sources\n\n\nPlease run chocolatey with `choco command -help` for specific help on\n each command.\n\nHow To Pass Options / Switches\n\nYou can pass options and switches in the following ways:\n\n * Unless stated otherwise, an option/switch should only be passed one\n   time. Otherwise you may find weird/non-supported behavior.\n * `-`, `/`, or `--` (one character switches should not use `--`)\n * **Option Bundling / Bundled Options**: One character switches can be\n   bundled. e.g. `-d` (debug), `-f` (force), `-v` (verbose), and `-y`\n   (confirm yes) can be bundled as `-dfvy`.\n * NOTE: If `debug` or `verbose` are bundled with local options\n   (not the global ones above), some logging may not show up until after\n   the local options are parsed.\n * **Use Equals**: You can also include or not include an equals sign\n   `=` between options and values.\n * **Quote Values**: When you need to quote an entire argument, such as\n   when using spaces, please use a combination of double quotes and\n   apostrophes (`\"'value'\"`). In cmd.exe you can just use double quotes\n   (`\"value\"`) but in powershell.exe you should use backticks\n   (`` `\"value`\" ``) or apostrophes (`'value'`). Using the combination\n   allows for both shells to work without issue, except for when the next\n   section applies.\n * **Pass quotes in arguments**: When you need to pass quoted values to\n   to something like a native installer, you are in for a world of fun. In\n   cmd.exe you must pass it like this: `-ia \"/yo=\"\"Spaces spaces\"\"\"`. In\n   PowerShell.exe, you must pass it like this: `-ia '/yo=\"\"Spaces spaces\"\"'`.\n   No other combination will work. In PowerShell.exe if you are on version\n   v3+, you can try `--%` before `-ia` to just pass the args through as is,\n   which means it should not require any special workarounds.\n * **Periods in PowerShell**: If you need to pass a period as part of a\n   value or a path, PowerShell doesn't always handle it well. Please\n   quote those values using \"Quote Values\" section above.\n * Options and switches apply to all items passed, so if you are\n   installing multiple packages, and you use `--version=1.0.0`, choco\n   is going to look for and try to install version 1.0.0 of every\n   package passed. So please split out multiple package calls when\n   wanting to pass specific options.\n\nScripting / Integration - Best Practices / Style Guide\n\nWhen writing scripts, such as PowerShell scripts passing options and\nswitches, there are some best practices to follow to ensure that you\ndon't run into issues later. This also applies to integrations that\nare calling Chocolatey and parsing output. Chocolatey **uses**\nPowerShell, but it is an exe, so it cannot return PowerShell objects.\n\nFollowing these practices ensures both readability of your scripts AND\ncompatibility across different versions and editions of Chocolatey.\nFollowing this guide will ensure your experience is not frustrating\nbased on choco not receiving things you think you are passing to it.\n\n * For consistency, always use `choco`, not `choco.exe`. Never use\n   shortcut commands like `cinst` or `cup` (The shortcuts `cinst`\n   and `cup` will be removed in v2.0.0).\n * Always have the command as the first argument to `choco`. e.g.\n   `choco install`, where `install` is the command.\n * If there is a subcommand, ensure that is the second argument. e.g.\n   `choco source list`, where `source` is the command and `list` is the\n   subcommand.\n * Typically the subject comes next. If installing packages, the\n   subject would be the package names, e.g. `choco install pkg1 pkg2`.\n * Never use 'nupkg' or point directly to a nupkg file UNLESS using\n   'choco push'. Use the source folder instead, e.g. `choco install\n   <package id> --source=\"'c:\\folder\\with\\package'\"` instead of\n   `choco install DoNotDoThis.1.0.nupkg` or `choco install DoNotDoThis\n    --source=\"'c:\\folder\\with\\package\\DoNotDoThis.1.0.nupkg'\"`.\n * Switches and parameters are called simply options. Options come\n   after the subject. e.g. `choco install pkg1 --debug --verbose`.\n * Never use the force option (`--force`/`-f`) in scripts (or really\n   otherwise as a default mode of use). Force is an override on\n   Chocolatey behavior. If you are wondering why Chocolatey isn't doing\n   something like the documentation says it should, it's likely because\n   you are using force. Stop.\n * Always use full option name. If the short option is `-n`, and the\n   full option is `--name`, use `--name`. The only acceptable short\n   option for use in scripts is `-y`. Find option names in help docs\n   online or through `choco -?` /`choco [Command Name] -?`.\n * For scripts that are running automated, always use `-y`. Do note\n   that even with `-y` passed, some things / state issues detected will\n   temporarily stop for input - the key here is temporarily. They will\n   continue without requiring any action after the temporary timeout\n   (typically 30 seconds).\n * Full option names are prepended with two dashes, e.g. `--` or\n   `--debug --verbose --ignore-proxy`.\n * When setting a value to an option, always put an equals (`=`)\n   between the name and the setting, e.g. `--source=\"'local'\"`.\n * When setting a value to an option, always surround the value\n   properly with double quotes bookending apostrophes, e.g.\n   `--source=\"'internal_server'\"`.\n * If you are building PowerShell scripts, you can most likely just\n   simply use apostrophes surrounding option values, e.g.\n   `--source='internal_server'`.\n * Prefer upgrade to install in scripts. You can't `install` to a newer\n   version of something, but you can `choco upgrade` which will do both\n   upgrade or install (unless switched off explicitly).\n * If you are sharing the script with others, pass `--source` to be\n   explicit about where the package is coming from. Use full link and\n   not source name ('https://community.chocolatey.org/api/v2' versus\n   'chocolatey').\n * If parsing output, you might want to use `--limit-output`/`-r` to\n   get output in a more machine parseable format. NOTE: Not all\n   commands handle return of information in an easily digestible\n   output.\n * Use exit codes to determine status. Chocolatey exits with 0 when\n   everything worked appropriately and other exits codes like 1 when\n   things error. There are package specific exit codes that are\n   recommended to be used and reboot indicating exit codes as well. To\n   check exit code when using PowerShell, immediately call\n   `$exitCode = $LASTEXITCODE` to get the value choco exited with.\n\nHere's an example following bad practices (line breaks added for\n readability):\n\n  `choco install pkg1 -y -params '/Option:Value /Option2:value with\n   spaces' --c4b-option 'Yaass' --option-that-is-new 'dude upgrade'`\n\nNow here is that example written with best practices (again line\n breaks added for readability - there are not line continuations\n for choco):\n\n  `choco upgrade pkg1 -y --source=\"'https://community.chocolatey.org/api/v2'\"\n   --package-parameters=\"'/Option:Value /Option2:value with spaces'\"\n   --c4b-option=\"'Yaass'\" --option-that-is-new=\"'dude upgrade'\"`\n\nNote the differences between the two:\n * Which is more self-documenting?\n * Which will allow for the newest version of something installed or\n   upgraded to (which allows for more environmental consistency on\n   packages and versions)?\n * Which may throw an error on a badly passed option?\n * Which will throw errors on unknown option values? See explanation\n   below.\n\nChocolatey ignores options it doesn't understand, but it can only\n ignore option values if they are tied to the option with an\n equals sign ('='). Note those last two options in the examples above?\n If you roll off of a commercial edition or someone with older version\n attempts to run the badly crafted script `--c4b-option 'Yaass'\n --option-that-is-new 'dude upgrade'`, they are likely to see errors on\n 'Yaass' and 'dude upgrade' because they are not explicitly tied to the\n option they are written after. Now compare that to the other script.\n Choco will ignore `--c4b-option=\"'Yaass'\"` and\n `--option-that-is-new=\"'dude upgrade'\"` as a whole when it doesn't\n register the options. This means that your script doesn't error.\n\nFollowing these scripting best practices will ensure your scripts work\n everywhere they are used and with newer versions of Chocolatey.\n\n\nDefault Options and Switches\n\n -?, --help, -h\n     Prints out the help menu.\n\n -d, --debug\n     Debug - Show debug messaging.\n\n -v, --verbose\n     Verbose - Show verbose messaging. Very verbose messaging, avoid using\n       under normal circumstances.\n\n     --trace\n     Trace - Show trace messaging. Very, very verbose trace messaging. Avoid\n       except when needing super low-level .NET Framework debugging. Available\n       in 0.10.4+.\n\n     --nocolor, --no-color\n     No Color - Do not show colorization in logging output. This overrides\n       the feature 'logWithoutColor', set to 'False'. Available in 0.10.9+.\n\n     --acceptlicense, --accept-license\n     AcceptLicense - Accept license dialogs automatically. Reserved for\n       future use.\n\n -y, --yes, --confirm\n     Confirm all prompts - Chooses affirmative answer instead of prompting.\n       Implies --accept-license\n\n -f, --force\n     Force - force the behavior. Do not use force during normal operation -\n       it subverts some of the smart behavior for commands.\n\n     --noop, --whatif, --what-if\n     NoOp / WhatIf - Don't actually do anything.\n\n -r, --limitoutput, --limit-output\n     LimitOutput - Limit the output to essential information\n\n     --timeout, --execution-timeout=VALUE\n     CommandExecutionTimeout (in seconds) - The time to allow a command to\n       finish before timing out. Overrides the default execution timeout in the\n       configuration of 2700 seconds. '0' for infinite starting in 0.10.4.\n\n -c, --cache, --cachelocation, --cache-location=VALUE\n     CacheLocation - Location for download cache, defaults to %TEMP% or value\n       in chocolatey.config file.\n\n     --allowunofficial, --allow-unofficial, --allowunofficialbuild, --allow-unofficial-build\n     AllowUnofficialBuild - When not using the official build you must set\n       this flag for choco to continue.\n\n     --failstderr, --failonstderr, --fail-on-stderr, --fail-on-standard-error, --fail-on-error-output\n     FailOnStandardError - Fail on standard error output (stderr), typically\n       received when running external commands during install providers. This\n       overrides the feature failOnStandardError.\n\n     --use-system-powershell\n       instead of the built-in PowerShell host. Should only be used when\n       internal host is failing. Available in 0.9.10+.\n\n     --no-progress\n     Do Not Show Progress - Do not show download progress percentages.\n       Available in 0.10.4+.\n\n     --proxy=VALUE\n     Proxy Location - Explicit proxy location. Overrides the default proxy\n       location of ''. Available for config settings in 0.9.9.9+, this CLI\n       option available in 0.10.4+.\n\n     --proxy-user=VALUE\n     Proxy User Name - Explicit proxy user (optional). Requires explicit\n       proxy (`--proxy` or config setting). Overrides the default proxy user of\n       ''. Available for config settings in 0.9.9.9+, this CLI option available\n       in 0.10.4+.\n\n     --proxy-password=VALUE\n     Proxy Password - Explicit proxy password (optional) to be used with\n       username. Requires explicit proxy (`--proxy` or config setting) and user\n       name.  Overrides the default proxy password (encrypted in settings if\n       set). Available for config settings in 0.9.9.9+, this CLI option\n       available in 0.10.4+.\n\n     --proxy-bypass-list=VALUE\n     ProxyBypassList - Comma separated list of regex locations to bypass on\n       proxy. Requires explicit proxy (`--proxy` or config setting). Overrides\n       the default proxy bypass list of ''. Available in 0.10.4+.\n\n     --proxy-bypass-on-local\n     Proxy Bypass On Local - Bypass proxy for local connections. Requires\n       explicit proxy (`--proxy` or config setting). Overrides the default\n       proxy bypass on local setting of 'True'. Available in 0.10.4+.\n\n     --log-file=VALUE\n     Log File to output to in addition to regular loggers. Available in 0.1-\n       0.8+.\n\n     --skipcompatibilitychecks, --skip-compatibility-checks\n     SkipCompatibilityChecks - Prevent warnings being shown before and after\n       command execution when a runtime compatibility problem is found between\n       the version of Chocolatey and the Chocolatey Licensed Extension.\n       Available in 1.1.0+\nChocolatey v1.2.0\n"})})]}),"\n",(0,t.jsx)(o.h2,{id:"\u5e38\u7528\u6307\u4ee4",children:"\u5e38\u7528\u6307\u4ee4"}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-powershell",children:"# \u67e5\u770b\u672c\u5730\u5b89\u88c5\u7684\u8f6f\u4ef6\nchoco list -li\n\n# \u67e5\u627e\u5b89\u88c5\u5305\nchoco search $packagename\n\n# \u5b89\u88c5\u5305\nchoco install $packagename\n\n# \u5378\u8f7d\u5305\nchoco uninstall $packagename\n\n# \u5347\u7ea7\u5305\nchoco upgrade $packagename\n\n# \u5347\u7ea7\u6240\u6709\u5305\nchoco upgrade --yes all\n"})}),"\n",(0,t.jsx)(o.h2,{id:"\u5e38\u7528\u8f6f\u4ef6",children:"\u5e38\u7528\u8f6f\u4ef6"}),"\n",(0,t.jsx)(o.admonition,{type:"warning",children:(0,t.jsx)(o.p,{children:"\u8bf7\u9009\u62e9\u81ea\u5df1\u9700\u8981\u7684\u5b89\u88c5\uff01"})}),"\n",(0,t.jsx)(o.h3,{id:"\u7cfb\u7edf\u73af\u5883",children:"\u7cfb\u7edf\u73af\u5883"}),"\n",(0,t.jsxs)(o.p,{children:[(0,t.jsx)(o.a,{href:"https://community.chocolatey.org/packages/dotnet-6.0-desktopruntime",children:".Net 6.0 Desktop Runtime"}),"\n| ",(0,t.jsx)(o.a,{href:"https://community.chocolatey.org/packages/geforce-experience",children:"GeForce Experience"})]}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-powershell",children:"choco install dotnet-6.0-desktopruntime geforce-experience\n"})}),"\n",(0,t.jsx)(o.h3,{id:"\u6d4f\u89c8\u5668",children:"\u6d4f\u89c8\u5668"}),"\n",(0,t.jsxs)(o.p,{children:[(0,t.jsx)(o.a,{href:"https://community.chocolatey.org/packages/GoogleChrome",children:"Google Chrome"}),"\n| ",(0,t.jsx)(o.a,{href:"https://community.chocolatey.org/packages/Firefox",children:"FireFox"}),"\n| ",(0,t.jsx)(o.a,{href:"https://community.chocolatey.org/packages/firefox-dev",children:"Firefox Developer Edition"})]}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-powershell",children:"choco install googlechrome firefox firefox-dev -y\n"})}),"\n",(0,t.jsx)(o.h3,{id:"\u817e\u8baf",children:"\u817e\u8baf"}),"\n",(0,t.jsxs)(o.p,{children:[(0,t.jsx)(o.a,{href:"https://community.chocolatey.org/packages/tencentqq",children:"QQ\uff08\u7248\u672c\u4f4e\uff09"}),"\n| ",(0,t.jsx)(o.a,{href:"https://community.chocolatey.org/packages/tim",children:"TIM"}),"\n| ",(0,t.jsx)(o.a,{href:"https://community.chocolatey.org/packages/wechat",children:"\u5fae\u4fe1"}),"\n| ",(0,t.jsx)(o.a,{href:"https://community.chocolatey.org/packages/tencentmeeting",children:"\u817e\u8baf\u4f1a\u8bae"}),"\n| ",(0,t.jsx)(o.a,{href:"https://community.chocolatey.org/packages/tencentdocs",children:"\u817e\u8baf\u6587\u6863"})]}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-powershell",children:"choco install tencentqq tim wechat tencentmeeting tencentdocs -y\n"})}),"\n",(0,t.jsx)(o.h3,{id:"\u5f71\u89c6\u97f3\u4e50",children:"\u5f71\u89c6\u97f3\u4e50"}),"\n",(0,t.jsxs)(o.p,{children:[(0,t.jsx)(o.a,{href:"https://community.chocolatey.org/packages/netease-cloudmusic",children:"\u7f51\u6613\u4e91\u97f3\u4e50"}),"\n| ",(0,t.jsx)(o.a,{href:"https://community.chocolatey.org/packages/potplayer",children:"PotPlayer"})]}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-powershell",children:"choco install potplayer netease-cloudmusic -y\n"})}),"\n",(0,t.jsx)(o.h3,{id:"officewps",children:"Office/WPS"}),"\n",(0,t.jsxs)(o.p,{children:[(0,t.jsx)(o.a,{href:"https://community.chocolatey.org/packages/office-tool",children:"Office Tool Plus"}),"\n| ",(0,t.jsx)(o.a,{href:"https://community.chocolatey.org/packages/writage",children:"Writage"}),"\n| ",(0,t.jsx)(o.a,{href:"https://community.chocolatey.org/packages/wps-office-free",children:"WPS Office Free"})]}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-powershell",children:"choco install office-tool wps-office-free -y\n"})}),"\n",(0,t.jsx)(o.h3,{id:"jetbrains",children:"JetBrains"}),"\n",(0,t.jsx)(o.p,{children:(0,t.jsx)(o.a,{href:"https://community.chocolatey.org/packages/jetbrainstoolbox",children:"Toolbox App"})}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-powershell",children:"choco install jetbrainstoolbox -y\n"})}),"\n",(0,t.jsx)(o.h4,{id:"idea",children:"IDEA"}),"\n",(0,t.jsxs)(o.p,{children:[(0,t.jsx)(o.a,{href:"https://community.chocolatey.org/packages/intellijidea-ultimate",children:"IDEA \u65d7\u8230\u7248"}),"\n| ",(0,t.jsx)(o.a,{href:"https://community.chocolatey.org/packages/intellijidea-community",children:"IDEA \u793e\u533a\u7248"})]}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-powershell",children:"choco install intellijidea-ultimate intellijidea-community -y\n"})}),"\n",(0,t.jsx)(o.h4,{id:"pycharm",children:"Pycharm"}),"\n",(0,t.jsxs)(o.p,{children:[(0,t.jsx)(o.a,{href:"https://community.chocolatey.org/packages/Pycharm",children:"Pycharm \u4e13\u4e1a\u7248"}),"\n| ",(0,t.jsx)(o.a,{href:"https://community.chocolatey.org/packages/PyCharm-community",children:"Pycharm \u793e\u533a\u7248"})]}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-powershell",children:"choco install pycharm pycharm-community -y\n"})}),"\n",(0,t.jsx)(o.h4,{id:"android-studio",children:(0,t.jsx)(o.a,{href:"https://community.chocolatey.org/packages/AndroidStudio",children:"Android Studio"})}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-powershell",children:"choco install androidstudio\n"})}),"\n",(0,t.jsx)(o.h3,{id:"\u5f00\u53d1\u73af\u5883",children:"\u5f00\u53d1\u73af\u5883"}),"\n",(0,t.jsxs)(o.p,{children:[(0,t.jsx)(o.a,{href:"https://community.chocolatey.org/packages/microsoft-windows-terminal",children:"Windows Terminal\uff08\u65e0\u6cd5\u5b89\u88c5\uff09"}),"\n| ",(0,t.jsx)(o.a,{href:"https://community.chocolatey.org/packages/powershell-core",children:"PowerShell Core"}),"\n| ",(0,t.jsx)(o.a,{href:"https://community.chocolatey.org/packages/vscode",children:"Visual Studio Code"}),"\n| ",(0,t.jsx)(o.a,{href:"https://community.chocolatey.org/packages/postman",children:"Postman"}),"\n| ",(0,t.jsx)(o.a,{href:"https://community.chocolatey.org/packages/winscp",children:"WinSCP"}),"\n| ",(0,t.jsx)(o.a,{href:"https://community.chocolatey.org/packages/python",children:"Python"}),"\n| ",(0,t.jsx)(o.a,{href:"https://community.chocolatey.org/packages/nodejs",children:"NodeJS"}),"\n| ",(0,t.jsx)(o.a,{href:"https://community.chocolatey.org/packages/yarn",children:"Yarn"}),"\n| ",(0,t.jsx)(o.a,{href:"https://community.chocolatey.org/packages/pnpm",children:"pnpm"}),"\n| ",(0,t.jsx)(o.a,{href:"https://community.chocolatey.org/packages/openjdk",children:"OpenJDK"}),"\n| ",(0,t.jsx)(o.a,{href:"https://community.chocolatey.org/packages/gradle",children:"Gradle"}),"\n| ",(0,t.jsx)(o.a,{href:"https://community.chocolatey.org/packages/maven",children:"Maven"}),"\n| ",(0,t.jsx)(o.a,{href:"https://community.chocolatey.org/packages/eclipse",children:"Eclipse"}),"\n| ",(0,t.jsx)(o.a,{href:"https://community.chocolatey.org/packages/SpringToolSuite",children:"SpringToolsSuite"}),"\n| ",(0,t.jsx)(o.a,{href:"https://community.chocolatey.org/packages/vmwareworkstation",children:"VMware Workstation Pro"})]}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-powershell",children:"choco install microsoft-windows-terminal powershell-core vscode postman winscp git python nodejs yarn pnpm openjdk gradle maven eclipse springtoolsuite vmwareworkstation -y\n"})}),"\n",(0,t.jsx)(o.h4,{id:"\u5b89\u88c5-git",children:"\u5b89\u88c5 Git"}),"\n",(0,t.jsxs)(o.p,{children:[(0,t.jsx)(o.a,{href:"https://community.chocolatey.org/packages/git",children:"Git"}),"\n| ",(0,t.jsx)(o.a,{href:"https://github.com/chocolatey-community/chocolatey-packages/blob/master/automatic/git.install/ARGUMENTS.md",children:"\u6240\u6709\u5b89\u88c5\u53c2\u6570"})]}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-shell",children:"# \u5b89\u88c5 Git \u5e76\u914d\u7f6e\uff1a\u6dfb\u52a0\u5230 WindowsTerminal\uff1b\u4f7f\u7528 VisualStudioCode \u6587\u672c\u7f16\u8f91\u5668\uff1b\u4e0d\u6dfb\u52a0 Git Gui Here \u53f3\u952e\u83dc\u5355\uff1b \nchoco install git -y -params \"'/WindowsTerminalProfile /Editor:VisualStudioCode /NoGuiHereIntegration'\"\n"})}),"\n",(0,t.jsx)(o.h3,{id:"\u5b9e\u7528\u5de5\u5177",children:"\u5b9e\u7528\u5de5\u5177"}),"\n",(0,t.jsxs)(o.p,{children:[(0,t.jsx)(o.a,{href:"https://community.chocolatey.org/packages/7zip",children:"7-zip"}),"\n| ",(0,t.jsx)(o.a,{href:"https://community.chocolatey.org/packages/rufus",children:"Rufus"}),"\n| ",(0,t.jsx)(o.a,{href:"https://community.chocolatey.org/packages/FreeDownloadManager",children:"Free Download Manager"}),"\n| ",(0,t.jsx)(o.a,{href:"https://community.chocolatey.org/packages/bitcomet",children:"BitComet"}),"\n| ",(0,t.jsx)(o.a,{href:"https://community.chocolatey.org/packages/picotorrent",children:"PicoTorrent"}),"\n| ",(0,t.jsx)(o.a,{href:"https://community.chocolatey.org/packages/ultraiso",children:"UltraISO\uff08\u738b\u6d9b\u7801\u65e0\u6cd5\u6fc0\u6d3b\uff09"}),"\n| ",(0,t.jsx)(o.a,{href:"https://community.chocolatey.org/packages/diskgenius",children:"DiskGenius"}),"\n| ",(0,t.jsx)(o.a,{href:"https://community.chocolatey.org/packages/cpu-z",children:"CPU-Z"}),"\n| ",(0,t.jsx)(o.a,{href:"https://community.chocolatey.org/packages/gpu-z",children:"GPU-Z"}),"\n| ",(0,t.jsx)(o.a,{href:"https://community.chocolatey.org/packages/as-ssd",children:"AS SSD Benchmark"}),"\n| ",(0,t.jsx)(o.a,{href:"https://community.chocolatey.org/packages/crystaldiskinfo",children:"CrystalDiskInfo"}),"\n| ",(0,t.jsx)(o.a,{href:"https://community.chocolatey.org/packages/spacesniffer",children:"SpaceSniffer"})]}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-powershell",children:"choco install 7zip rufus freedownloadmanager bitcomet picotorrent ultraiso diskgenius cpu-z gpu-z as-ssd crystaldiskinfo spacesniffer -y\n"})}),"\n",(0,t.jsx)(o.h2,{id:"\u5b89\u88c5\u4f4d\u7f6e",children:"\u5b89\u88c5\u4f4d\u7f6e"}),"\n",(0,t.jsx)(o.p,{children:"\u8f6f\u4ef6\u901a\u5e38\u4f1a\u5b89\u88c5\u5230\uff1a"}),"\n",(0,t.jsxs)(o.ul,{children:["\n",(0,t.jsx)(o.li,{children:(0,t.jsx)(o.code,{children:"C:\\Program Files"})}),"\n",(0,t.jsx)(o.li,{children:(0,t.jsx)(o.code,{children:"C:\\Program Files (x86)"})}),"\n",(0,t.jsx)(o.li,{children:(0,t.jsx)(o.code,{children:"C:\\ProgramData"})}),"\n",(0,t.jsx)(o.li,{children:(0,t.jsx)(o.code,{children:"C:\\ProgramData\\chocolatey\\lib"})}),"\n",(0,t.jsx)(o.li,{children:(0,t.jsx)(o.code,{children:"C:\\tools"})}),"\n"]}),"\n",(0,t.jsx)(o.h2,{id:"yue_plus-\u7684\u7cfb\u7edf\u73af\u5883",children:"Yue_plus \u7684\u7cfb\u7edf\u73af\u5883"}),"\n",(0,t.jsx)(o.p,{children:"\u5f00\u542f\u7f51\u7edc\u4ee3\u7406\uff0c\u7136\u540e\u4ee5\u7ba1\u7406\u5458\u8eab\u4efd\u5728 PowerShell \u4e2d\u8fd0\u884c\uff1a"}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-powershell",children:"choco install powershell-core dotnet-6.0-desktopruntime office-tool jetbrainstoolbox vscode `\ngit -params \"'/WindowsTerminalProfile /Editor:VisualStudioCode /NoGuiHereIntegration'\" `\npostman googlechrome firefox-dev --pre `\npotplayer freedownloadmanager 7zip rufus winscp `\nopenjdk gradle nodejs  flutter anaconda3 `\n-y\nchoco install wechat netease-cloudmusic steam -y\nchoco install yarn pnpm -y\n"})})]})}function d(e={}){const{wrapper:o}={...(0,a.R)(),...e.components};return o?(0,t.jsx)(o,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},28453:(e,o,n)=>{n.d(o,{R:()=>i,x:()=>r});var t=n(96540);const a={},s=t.createContext(a);function i(e){const o=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function r(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),t.createElement(s.Provider,{value:o},e.children)}}}]);
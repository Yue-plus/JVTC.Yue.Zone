"use strict";(self.webpackChunkjvtc_yue_zone=self.webpackChunkjvtc_yue_zone||[]).push([[4769],{89859:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var i=t(85893),r=t(11151);const o={},a="\u7528 JPA \u5b9e\u73b0\u6838\u5fc3\u670d\u52a1",s={id:"\u5f00\u53d1/\u6846\u67b6/Spring/AuthorizationServer/HowTo/\u7528JPA\u5b9e\u73b0\u6838\u5fc3\u670d\u52a1",title:"\u7528 JPA \u5b9e\u73b0\u6838\u5fc3\u670d\u52a1",description:"\u6b64\u9875\u9762\u6b63\u5728\u65bd\u5de5\uff01\u8bf7\u8c28\u614e\u53c2\u8003\u3002",source:"@site/docs/02-\u5f00\u53d1/03-\u6846\u67b6/Spring/07-AuthorizationServer/HowTo/\u7528JPA\u5b9e\u73b0\u6838\u5fc3\u670d\u52a1.md",sourceDirName:"02-\u5f00\u53d1/03-\u6846\u67b6/Spring/07-AuthorizationServer/HowTo",slug:"/\u5f00\u53d1/\u6846\u67b6/Spring/AuthorizationServer/HowTo/\u7528JPA\u5b9e\u73b0\u6838\u5fc3\u670d\u52a1",permalink:"/docs/\u5f00\u53d1/\u6846\u67b6/Spring/AuthorizationServer/HowTo/\u7528JPA\u5b9e\u73b0\u6838\u5fc3\u670d\u52a1",draft:!1,unlisted:!1,editUrl:"https://github.com/Yue-plus/JVTC.Yue.Zone/tree/main/docs/02-\u5f00\u53d1/03-\u6846\u67b6/Spring/07-AuthorizationServer/HowTo/\u7528JPA\u5b9e\u73b0\u6838\u5fc3\u670d\u52a1.md",tags:[],version:"current",frontMatter:{},sidebar:"\u5f00\u53d1",previous:{title:"Authorization Server",permalink:"/docs/\u5f00\u53d1/\u6846\u67b6/Spring/AuthorizationServer/"},next:{title:"Vue",permalink:"/docs/\u5f00\u53d1/\u6846\u67b6/Vue/"}},l={},c=[{value:"\u521b\u5efa JPA \u5b9e\u4f53",id:"\u521b\u5efa-jpa-\u5b9e\u4f53",level:2},{value:"\u5ba2\u6237\u7aef\u5b9e\u4f53",id:"\u5ba2\u6237\u7aef\u5b9e\u4f53",level:3},{value:"\u6388\u6743\u8bb8\u53ef\u5b9e\u4f53",id:"\u6388\u6743\u8bb8\u53ef\u5b9e\u4f53",level:3},{value:"\u6388\u6743\u8bb8\u53ef\u5b9e\u4f53",id:"\u6388\u6743\u8bb8\u53ef\u5b9e\u4f53-1",level:3},{value:"\u521b\u5efa Spring Data Repository",id:"\u521b\u5efa-spring-data-repository",level:2},{value:"Client Repository",id:"client-repository",level:3},{value:"Authorization Repository",id:"authorization-repository",level:3},{value:"Authorization Consent Repository",id:"authorization-consent-repository",level:3},{value:"\u5b9e\u73b0\u6838\u5fc3\u670d\u52a1",id:"\u5b9e\u73b0\u6838\u5fc3\u670d\u52a1",level:2},{value:"Registered Client Repository",id:"registered-client-repository",level:3},{value:"Authorization Service",id:"authorization-service",level:3},{value:"Authorization Consent Service",id:"authorization-consent-service",level:3}];function d(n){const e={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,r.a)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h1,{id:"\u7528-jpa-\u5b9e\u73b0\u6838\u5fc3\u670d\u52a1",children:"\u7528 JPA \u5b9e\u73b0\u6838\u5fc3\u670d\u52a1"}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u6b64\u9875\u9762\u6b63\u5728\u65bd\u5de5\uff01\u8bf7\u8c28\u614e\u53c2\u8003\u3002"})}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsxs)(e.p,{children:["\u53c2\u8003\uff1a",(0,i.jsx)(e.a,{href:"https://docs.spring.io/spring-authorization-server/docs/current/reference/html/guides/how-to-jpa.html",children:"\u5b98\u65b9\u6587\u6863"}),"\n| ",(0,i.jsx)(e.a,{href:"https://springdoc.cn/spring-authorization-server/guides/how-to-jpa.html",children:"\u4e2d\u6587\u6587\u6863"})]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"\u521b\u5efa-jpa-\u5b9e\u4f53",children:"\u521b\u5efa JPA \u5b9e\u4f53"}),"\n",(0,i.jsx)(e.h3,{id:"\u5ba2\u6237\u7aef\u5b9e\u4f53",children:"\u5ba2\u6237\u7aef\u5b9e\u4f53"}),"\n",(0,i.jsxs)(e.p,{children:["\u7528\u6765\u6301\u4e45\u5316\u4ece\n",(0,i.jsx)(e.a,{href:"https://springdoc.cn/spring-authorization-server/core-model-components.html#registered-client",children:"RegisteredClient"}),"\n",(0,i.jsx)(e.code,{children:"domain"})," \u5bf9\u8c61\u6620\u5c04\u7684\u4fe1\u606f\u3002"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-kotlin",metastring:'title="src/main/kotlin/zone/yue/core/user/UserEntity.kt"',children:'package zone.yue.core.authorization\n\nimport jakarta.persistence.Column\nimport jakarta.persistence.Entity\nimport jakarta.persistence.Id\nimport jakarta.persistence.Table\nimport java.time.Instant\n\n\n@Entity\n@Table(name = "`client`")\nclass ClientEntity(\n    @Id val id: String,\n    val clientId: String,\n    val clientIdIssuedAt: Instant,\n    val clientSecret: String,\n    val clientSecretExpiresAt: Instant,\n    val clientName: String,\n\n    @Column(length = 1000) val clientAuthenticationMethods: String,\n    @Column(length = 1000) val authorizationGrantTypes: String,\n    @Column(length = 1000) val redirectUris: String,\n    @Column(length = 1000) val scopes: String,\n    @Column(length = 2000) val clientSettings: String,\n    @Column(length = 2000) val tokenSettings: String,\n)\n'})}),"\n",(0,i.jsx)(e.h3,{id:"\u6388\u6743\u8bb8\u53ef\u5b9e\u4f53",children:"\u6388\u6743\u8bb8\u53ef\u5b9e\u4f53"}),"\n",(0,i.jsxs)(e.p,{children:["\u7528\u6765\u4fdd\u5b58\u4ece\n",(0,i.jsx)(e.a,{href:"https://springdoc.cn/spring-authorization-server/core-model-components.html#oauth2-authorization",children:"OAuth2Authorization"}),"\n",(0,i.jsx)(e.code,{children:"domain"})," \u5bf9\u8c61\u6620\u5c04\u7684\u4fe1\u606f\u3002"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-kotlin",metastring:'title="src/main/kotlin/zone/yue/core/user/AuthorizationEntity.kt"',children:'package zone.yue.core.authorization\n\nimport jakarta.persistence.Column\nimport jakarta.persistence.Entity\nimport jakarta.persistence.Id\nimport jakarta.persistence.Table\nimport java.time.Instant\n\n@Entity\n@Table(name = "`authorization`")\nclass AuthorizationEntity (\n    @Id @Column val id: String,\n    val registeredClientId: String,\n    val principalName: String,\n    val authorizationGrantType: String,\n\n    @Column(length = 1000) val authorizedScopes: String,\n    @Column(length = 4000) val attributes: String,\n    @Column(length = 500) val state: String,\n\n    @Column(length = 4000)\n    val authorizationCodeValue: String,\n    val authorizationCodeIssuedAt: Instant,\n    val authorizationCodeExpiresAt: Instant,\n    val authorizationCodeMetadata: String,\n\n    @Column(length = 4000)\n    val accessTokenValue: String,\n    val accessTokenIssuedAt: Instant,\n    val accessTokenExpiresAt: Instant,\n\n    @Column(length = 2000)\n    val accessTokenMetadata: String,\n    val accessTokenType: String,\n\n    @Column(length = 1000) val accessTokenScopes: String,\n\n    @Column(length = 4000)\n    val refreshTokenValue: String,\n    val refreshTokenIssuedAt: Instant,\n    val refreshTokenExpiresAt: Instant,\n\n    @Column(length = 2000) val refreshTokenMetadata: String,\n\n    @Column(length = 4000)\n    val oidcIdTokenValue: String,\n    val oidcIdTokenIssuedAt: Instant,\n    val oidcIdTokenExpiresAt: Instant,\n\n    @Column(length = 2000) val oidcIdTokenMetadata: String,\n    @Column(length = 2000) val oidcIdTokenClaims: String,\n)\n'})}),"\n",(0,i.jsx)(e.h3,{id:"\u6388\u6743\u8bb8\u53ef\u5b9e\u4f53-1",children:"\u6388\u6743\u8bb8\u53ef\u5b9e\u4f53"}),"\n",(0,i.jsxs)(e.p,{children:["\u7528\u6765\u4fdd\u5b58\u4ece\n",(0,i.jsx)(e.a,{href:"https://springdoc.cn/spring-authorization-server/core-model-components.html#oauth2-authorization-consent",children:"OAuth2AuthorizationConsent"}),"\n",(0,i.jsx)(e.code,{children:"domain"})," \u5bf9\u8c61\u6620\u5c04\u7684\u4fe1\u606f\u3002"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-kotlin",metastring:'title="src/main/kotlin/zone/yue/core/user/AuthorizationConsentEntity.kt"',children:'package zone.yue.core.authorization\n\nimport jakarta.persistence.*\nimport java.io.Serializable\nimport java.util.*\n\n@Entity\n@Table(name = "`authorization_consent`")\n@IdClass(AuthorizationConsentEntity.AuthorizationConsentId::class)\nclass AuthorizationConsentEntity (\n    @Id val registeredClientId: String,\n    @Id val principalName: String,\n    @Column(length = 1000) val authorities: String,\n) {\n    class AuthorizationConsentId : Serializable {\n        private val registeredClientId: String? = null\n        private val principalName: String? = null\n\n        override fun equals(other: Any?): Boolean {\n            if (this === other) return true\n            if (other == null || javaClass != other.javaClass) return false\n            val that = other as AuthorizationConsentId\n            return registeredClientId == that.registeredClientId && principalName == that.principalName\n        }\n\n        override fun hashCode(): Int {\n            return Objects.hash(registeredClientId, principalName)\n        }\n    }\n}\n'})}),"\n",(0,i.jsx)(e.h2,{id:"\u521b\u5efa-spring-data-repository",children:"\u521b\u5efa Spring Data Repository"}),"\n",(0,i.jsx)(e.h3,{id:"client-repository",children:"Client Repository"}),"\n",(0,i.jsxs)(e.p,{children:["\u80fd\u591f\u901a\u8fc7 ",(0,i.jsx)(e.code,{children:"id"})," \u548c ",(0,i.jsx)(e.code,{children:"clientId"})," \u5b57\u6bb5\u627e\u5230\u4e00\u4e2a ",(0,i.jsx)(e.a,{href:"#%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%AE%9E%E4%BD%93",children:"ClientEntity"}),"\u3002"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-kotlin",metastring:'title="src/main/kotlin/zone/yue/core/authorization/ClientRepository.kt"',children:"package zone.yue.core.authorization\n\nimport org.springframework.data.jpa.repository.JpaRepository\nimport org.springframework.stereotype.Repository\n\n@Repository\ninterface ClientRepository : JpaRepository<ClientEntity, String> {\n    fun findByClientId(clientId: String): ClientEntity\n}\n"})}),"\n",(0,i.jsx)(e.h3,{id:"authorization-repository",children:"Authorization Repository"}),"\n",(0,i.jsxs)(e.p,{children:["\u80fd\u591f\u901a\u8fc7 ",(0,i.jsx)(e.code,{children:"id"})," \u5b57\u6bb5\u4ee5\u53ca ",(0,i.jsx)(e.code,{children:"state"}),"\u3001",(0,i.jsx)(e.code,{children:"authorizationCodeValue"}),"\u3001",(0,i.jsx)(e.code,{children:"accessTokenValue"})," \u548c ",(0,i.jsx)(e.code,{children:"refreshTokenValue"})," ",(0,i.jsx)(e.em,{children:"token"})," \u5b57\u6bb5\u627e\u5230\u4e00\u4e2a ",(0,i.jsx)(e.a,{href:"#%E6%8E%88%E6%9D%83%E8%AE%B8%E5%8F%AF%E5%AE%9E%E4%BD%93",children:"AuthorizationEntity"}),"\uff0c\u5b83\u8fd8\u5141\u8bb8\u67e5\u8be2 token \u5b57\u6bb5\u7684\u7ec4\u5408\u3002"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-kotlin",metastring:'title="src/main/kotlin/zone/yue/core/authorization/AuthorizationRepository.kt"',children:'package zone.yue.core.authorization\n\nimport org.springframework.data.jpa.repository.JpaRepository\nimport org.springframework.data.jpa.repository.Query\nimport org.springframework.data.repository.query.Param\nimport org.springframework.stereotype.Repository\nimport java.util.*\n\n@Repository\ninterface AuthorizationRepository : JpaRepository<AuthorizationEntity, String> {\n    fun findByState(state: String): AuthorizationEntity\n    fun findByAuthorizationCodeValue(authorizationCode: String): AuthorizationEntity\n    fun findByAccessTokenValue(accessToken: String): AuthorizationEntity\n    fun findByRefreshTokenValue(refreshToken: String?): AuthorizationEntity\n\n    @Query(\n        "select a from AuthorizationEntity a where a.state = :token" +\n                " or a.authorizationCodeValue = :token" +\n                " or a.accessTokenValue = :token" +\n                " or a.refreshTokenValue = :token"\n    )\n    fun findByStateOrAuthorizationCodeValueOrAccessTokenValueOrRefreshTokenValue(@Param("token") token: String?)\n            : AuthorizationEntity\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"authorization-consent-repository",children:"Authorization Consent Repository"}),"\n",(0,i.jsxs)(e.p,{children:["\u80fd\u591f\u901a\u8fc7\u6784\u6210\u590d\u5408\u4e3b\u952e\u7684 ",(0,i.jsx)(e.code,{children:"registeredClientId"})," \u548c ",(0,i.jsx)(e.code,{children:"principalName"})," \u5b57\u6bb5\u627e\u5230\u5e76\u5220\u9664\u4e00\u4e2a ",(0,i.jsx)(e.a,{href:"#%E6%8E%88%E6%9D%83%E8%AE%B8%E5%8F%AF%E5%AE%9E%E4%BD%93",children:"AuthorizationConsentEntity"}),"\u3002"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-kotlin",metastring:'title="src/main/kotlin/zone/yue/core/authorization/AuthorizationConsentRepository.kt"',children:"package zone.yue.core.authorization\n\nimport org.springframework.data.jpa.repository.JpaRepository\nimport org.springframework.stereotype.Repository\n\n@Repository\ninterface AuthorizationConsentRepository :\n    JpaRepository<AuthorizationConsentEntity, AuthorizationConsentEntity.AuthorizationConsentId> {\n    fun findByRegisteredClientIdAndPrincipalName(\n        registeredClientId: String,\n        principalName: String,\n    ): AuthorizationConsentEntity\n\n    fun deleteByRegisteredClientIdAndPrincipalName(registeredClientId: String, principalName: String)\n}\n"})}),"\n",(0,i.jsx)(e.h2,{id:"\u5b9e\u73b0\u6838\u5fc3\u670d\u52a1",children:"\u5b9e\u73b0\u6838\u5fc3\u670d\u52a1"}),"\n",(0,i.jsx)(e.h3,{id:"registered-client-repository",children:"Registered Client Repository"}),"\n",(0,i.jsx)(e.h3,{id:"authorization-service",children:"Authorization Service"}),"\n",(0,i.jsx)(e.h3,{id:"authorization-consent-service",children:"Authorization Consent Service"})]})}function h(n={}){const{wrapper:e}={...(0,r.a)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(d,{...n})}):d(n)}},11151:(n,e,t)=>{t.d(e,{Z:()=>s,a:()=>a});var i=t(67294);const r={},o=i.createContext(r);function a(n){const e=i.useContext(o);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function s(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:a(n.components),i.createElement(o.Provider,{value:e},n.children)}}}]);
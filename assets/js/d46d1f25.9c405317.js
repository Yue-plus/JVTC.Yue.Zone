"use strict";(self.webpackChunkjvtc_yue_zone=self.webpackChunkjvtc_yue_zone||[]).push([[8375],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(n),m=a,g=u["".concat(l,".").concat(m)]||u[m]||d[m]||i;return n?r.createElement(g,o(o({ref:t},c),{},{components:n})):r.createElement(g,o({ref:t},c))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:a,o[1]=s;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},47614:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var r=n(87462),a=(n(67294),n(3905));const i={title:"JPA"},o="Spring Data JPA",s={unversionedId:"\u5f00\u53d1/\u6846\u67b6/Spring/Data/JPA/README",id:"\u5f00\u53d1/\u6846\u67b6/Spring/Data/JPA/README",title:"JPA",description:"Spring Data JPA \u4e3a Jakarta Persistence API (JPA) \u63d0\u4f9b\u4e86\u5b58\u50a8\u5e93\u652f\u6301\u3002",source:"@site/docs/\u5f00\u53d1/03-\u6846\u67b6/Spring/03-Data/01-JPA/README.md",sourceDirName:"\u5f00\u53d1/03-\u6846\u67b6/Spring/03-Data/01-JPA",slug:"/\u5f00\u53d1/\u6846\u67b6/Spring/Data/JPA/",permalink:"/docs/\u5f00\u53d1/\u6846\u67b6/Spring/Data/JPA/",draft:!1,editUrl:"https://github.com/Yue-plus/JVTC.Yue.Zone/tree/main/docs/\u5f00\u53d1/03-\u6846\u67b6/Spring/03-Data/01-JPA/README.md",tags:[],version:"current",frontMatter:{title:"JPA"},sidebar:"\u5f00\u53d1",previous:{title:"Data",permalink:"/docs/\u5f00\u53d1/\u6846\u67b6/Spring/Data/"},next:{title:"Security",permalink:"/docs/\u5f00\u53d1/\u6846\u67b6/Spring/Security/"}},l={},p=[{value:"\u6559\u7a0b",id:"\u6559\u7a0b",level:2},{value:"\u914d\u7f6e\u6587\u4ef6",id:"\u914d\u7f6e\u6587\u4ef6",level:2},{value:"\u5b9e\u4f53\uff08Entity\uff09",id:"\u5b9e\u4f53entity",level:2},{value:"\u50a8\u5b58\u5e93\uff08Repository\uff09",id:"\u50a8\u5b58\u5e93repository",level:2}],c={toc:p},u="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"spring-data-jpa"},"Spring Data JPA"),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Spring Data JPA \u4e3a Jakarta Persistence API (JPA) \u63d0\u4f9b\u4e86\u5b58\u50a8\u5e93\u652f\u6301\u3002\n\u5b83\u7b80\u5316\u4e86\u9700\u8981\u8bbf\u95ee JPA \u6570\u636e\u6e90\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u5f00\u53d1\u3002"),(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("a",{parentName:"p",href:"https://docs.spring.io/spring-data/jpa/docs/current/reference/html/"},"\u5b98\u65b9\u6587\u6863"),"\n| ",(0,a.kt)("a",{parentName:"p",href:"https://springdoc.cn/spring-data-jpa/"},"\u4e2d\u6587\u6587\u6863"),"\n| ",(0,a.kt)("a",{parentName:"p",href:"https://hibernate.org/"},"Hibernate"))),(0,a.kt)("h2",{id:"\u6559\u7a0b"},"\u6559\u7a0b"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://spring.io/guides/gs/accessing-data-rest/"},"Accessing JPA Data with REST - Spring Guides"))),(0,a.kt)("h2",{id:"\u914d\u7f6e\u6587\u4ef6"},"\u914d\u7f6e\u6587\u4ef6"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="src/main/resources/application.yaml"',title:'"src/main/resources/application.yaml"'},"spring:\n  jpa:\n    database: postgresql\n    generate-ddl: true\n    hibernate.ddl-auto: validate\n")),(0,a.kt)("h2",{id:"\u5b9e\u4f53entity"},"\u5b9e\u4f53\uff08Entity\uff09"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://juejin.cn/post/7143048935739752484"},"Spring Data JPA @Entity\u8be6\u89e3 - \u6398\u91d1"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin",metastring:'title="src/main/kotlin/zone/yue/core/user/UserLastLoginInfoEntity.kt"',title:'"src/main/kotlin/zone/yue/core/user/UserLastLoginInfoEntity.kt"'},'package zone.yue.core.user\n\nimport jakarta.persistence.Entity\nimport jakarta.persistence.Id\nimport jakarta.persistence.Table\nimport org.hibernate.proxy.HibernateProxy\nimport java.net.InetAddress\nimport java.time.LocalDateTime\nimport java.util.*\n\n@Entity\n@Table(name = "user_last_login_info")\ndata class UserLastLoginInfoEntity(\n    @Id val uuid: UUID,\n    private val lastLoginDateTime: LocalDateTime,\n    private val lastLoginIp: InetAddress,\n    private val lastLoginUserAgent: String,\n) {\n    constructor() : this(\n        UUID.fromString("00000000-0000-0000-0000-000000000000"),\n        LocalDateTime.MIN,\n        InetAddress.getLoopbackAddress(),\n        "",\n    )\n\n    override fun equals(other: Any?): Boolean {\n        if (this === other) return true\n        if (other == null) return false\n\n        val oEffectiveClass =\n            if (other is HibernateProxy) other.hibernateLazyInitializer.persistentClass else other.javaClass\n        if (javaClass != oEffectiveClass) return false\n\n        other as UserLastLoginInfoEntity\n\n        return uuid == other.uuid\n    }\n\n    override fun hashCode(): Int = javaClass.hashCode()\n\n    override fun toString(): String {\n        return this::class.simpleName +\n                "(uuid = $uuid , " +\n                "lastLoginDateTime = $lastLoginDateTime , " +\n                "lastLoginIp = $lastLoginIp , " +\n                "lastLoginUserAgent = $lastLoginUserAgent )"\n    }\n}\n')),(0,a.kt)("h2",{id:"\u50a8\u5b58\u5e93repository"},"\u50a8\u5b58\u5e93\uff08Repository\uff09"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://springdoc.cn/spring-data-jpa/#repositories.core-concepts"},"4.1. \u6838\u5fc3\u6982\u5ff5 - Spring Data JPA \u4e2d\u6587\u6587\u6863"))))}d.isMDXComponent=!0}}]);